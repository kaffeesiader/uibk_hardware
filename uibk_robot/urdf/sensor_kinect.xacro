<?xml version="1.0"?>
     
<robot name="sensor_kinect" xmlns:xacro="http://ros.org/wiki/xacro">
  
  <!-- I took this file from 
       https://github.com/turtlebot/graveyard_turtlebot_common/blob/master/turtlebot_description_common/urdf/sensors/kinect.urdf.xacro 
       and modified it for our purposes -->
       
  <!-- Xacro properties -->
  <xacro:property name="M_SCALE" value="0.001"/>
  <xacro:property name="kinect_depth_rel_rgb_py" value="0.0270" />
  <xacro:property name="kinect_cam_rel_rgb_py"   value="0.0135" />
  
 
  <xacro:macro name="sensor_kinect" params="parent">
    
    <joint name="camera_rgb_joint" type="fixed">
      <origin xyz="0 0 0" 
              rpy="0 0 0"/>
      <parent link="${parent}"/>
      <child link="camera_rgb_frame" />
    </joint>
    
    <link name="camera_rgb_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0"
          izz="0.0001" />
      </inertial>
    </link>
    
    <joint name="camera_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="camera_rgb_frame" />
      <child link="camera_rgb_optical_frame" />
    </joint>
    
    <link name="camera_rgb_optical_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0"
          izz="0.0001" />
      </inertial>
    </link>
    
    <joint name="camera_joint" type="fixed">
      <origin xyz="0 ${kinect_cam_rel_rgb_py} 0" rpy="0 0 0"/>
      <parent link="camera_rgb_frame"/>
      <child link="camera_link"/>
    </joint>  
	
    <link name="camera_link">
      <visual>
	<origin xyz="0 0 0" rpy="0 0 0"/>
	<geometry>
	  <!-- mesh from original source did not work. So I exported the mesh from VRep and used that instead. -->
	  <mesh filename="package://uibk_robot/meshes/sensors/kinect2.dae"/>
	</geometry>
	<material name="Grey"/>
      </visual>  
      <collision>
	<!--origin xyz="-0.0315 0.0 -0.017" rpy="0 0 0"/-->
	<origin xyz="0 0 0.0365" rpy="0 0 ${M_PI/2}"/>
	<geometry>
	  <box size="0.07271 0.27794 0.073"/>
	</geometry>
      </collision>
      <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="0.01" ixy="0.0" ixz="0.0"
                 iyy="0.01" iyz="0.0"
                 izz="0.01" />
      </inertial>  
    </link>

    <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch 
         files. However, for Gazebo simulation we need them, so we add them here.
         (Hence, don't publish them additionally!) -->
    <joint name="camera_depth_joint" type="fixed">
      <origin xyz="0 ${kinect_depth_rel_rgb_py} 0" rpy="0 0 0" />
      <parent link="camera_rgb_frame" />
      <child link="camera_depth_frame" />
    </joint>
    
    <link name="camera_depth_frame">
      <inertial>
	<mass value="0.01" />
	<origin xyz="0 0 0" />
	<inertia ixx="0.001" ixy="0.0" ixz="0.0"
		 iyy="0.001" iyz="0.0"
		 izz="0.001" />
      </inertial>
    </link>
    
    <joint name="camera_depth_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="camera_depth_frame" />
      <child link="camera_depth_optical_frame" />
    </joint>
    
    <link name="camera_depth_optical_frame">
      <inertial>
	<mass value="0.001" />
	<origin xyz="0 0 0" />
	<inertia ixx="0.0001" ixy="0.0" ixz="0.0"
		 iyy="0.0001" iyz="0.0"
		 izz="0.0001" />
      </inertial>
    </link>

  </xacro:macro>
</robot>